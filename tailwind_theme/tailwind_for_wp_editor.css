

*,::before,::after {
  box-sizing: border-box;
}

a {
          color: inherit;
          text-decoration: inherit;
        }
        ol,
        ul,
        menu {
          list-style: none;
          margin: 0;
          padding: 0;
        }
        
        blockquote,
        dl,
        dd,
        h1,
        h2,
        h3,
        h4,
        h5,
        h6,
        hr,
        figure,
        p,
        pre {
          margin: 0;
        }                        

.prose {
          color: var(--tw-prose-body);
          max-width: 65ch;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-lead);
          font-size: 1.25em;
          line-height: 1.6;
          margin-top: 1.2em;
          margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-links);
          text-decoration: underline;
          font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-bold);
          font-weight: 600;
}
.prose :where(ol):not(:where([class~="not-prose"] *)) {
          list-style-type: decimal;
          padding-left: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
          list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
          list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
          list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
          list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
          list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
          list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
          list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
          list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
          list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"] *)) {
          list-style-type: disc;
          padding-left: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
          font-weight: 400;
          color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
          color: var(--tw-prose-bullets);
}
.prose :where(hr):not(:where([class~="not-prose"] *)) {
          border-color: var(--tw-prose-hr);
          border-top-width: 1px;
          margin-top: 3em;
          margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
          font-weight: 500;
          font-style: italic;
          color: var(--tw-prose-quotes);
          border-left-width: 0.25rem;
          border-left-color: var(--tw-prose-quote-borders);
          quotes: "\201C""\201D""\2018""\2019";
          margin-top: 1.6em;
          margin-bottom: 1.6em;
          padding-left: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
          content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
          content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-headings);
          font-weight: 800;
          font-size: 2.25em;
          margin-top: 0;
          margin-bottom: 0.8888889em;
          line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
          font-weight: 900;
}
.prose :where(h2):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-headings);
          font-weight: 700;
          font-size: 1.5em;
          margin-top: 2em;
          margin-bottom: 1em;
          line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
          font-weight: 800;
}
.prose :where(h3):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-headings);
          font-weight: 600;
          font-size: 1.25em;
          margin-top: 1.6em;
          margin-bottom: 0.6em;
          line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
          font-weight: 700;
}
.prose :where(h4):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-headings);
          font-weight: 600;
          margin-top: 1.5em;
          margin-bottom: 0.5em;
          line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
          font-weight: 700;
}
.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
          margin-top: 0;
          margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-captions);
          font-size: 0.875em;
          line-height: 1.4285714;
          margin-top: 0.8571429em;
}
.prose :where(code):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-code);
          font-weight: 600;
          font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"] *))::before {
          content: "`";
}
.prose :where(code):not(:where([class~="not-prose"] *))::after {
          content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-links);
}
.prose :where(pre):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-pre-code);
          background-color: var(--tw-prose-pre-bg);
          overflow-x: auto;
          font-weight: 400;
          font-size: 0.875em;
          line-height: 1.7142857;
          margin-top: 1.7142857em;
          margin-bottom: 1.7142857em;
          border-radius: 0.375rem;
          padding-top: 0.8571429em;
          padding-right: 1.1428571em;
          padding-bottom: 0.8571429em;
          padding-left: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"] *)) {
          background-color: transparent;
          border-width: 0;
          border-radius: 0;
          padding: 0;
          font-weight: inherit;
          color: inherit;
          font-size: inherit;
          font-family: inherit;
          line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
          content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
          content: none;
}
.prose :where(table):not(:where([class~="not-prose"] *)) {
          width: 100%;
          table-layout: auto;
          text-align: left;
          margin-top: 2em;
          margin-bottom: 2em;
          font-size: 0.875em;
          line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"] *)) {
          border-bottom-width: 1px;
          border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"] *)) {
          color: var(--tw-prose-headings);
          font-weight: 600;
          vertical-align: bottom;
          padding-right: 0.5714286em;
          padding-bottom: 0.5714286em;
          padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
          border-bottom-width: 1px;
          border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
          border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
          vertical-align: baseline;
          padding-top: 0.5714286em;
          padding-right: 0.5714286em;
          padding-bottom: 0.5714286em;
          padding-left: 0.5714286em;
}
.prose {
          --tw-prose-body: #374151;
          --tw-prose-headings: #111827;
          --tw-prose-lead: #4b5563;
          --tw-prose-links: #111827;
          --tw-prose-bold: #111827;
          --tw-prose-counters: #6b7280;
          --tw-prose-bullets: #d1d5db;
          --tw-prose-hr: #e5e7eb;
          --tw-prose-quotes: #111827;
          --tw-prose-quote-borders: #e5e7eb;
          --tw-prose-captions: #6b7280;
          --tw-prose-code: #111827;
          --tw-prose-pre-code: #e5e7eb;
          --tw-prose-pre-bg: #1f2937;
          --tw-prose-th-borders: #d1d5db;
          --tw-prose-td-borders: #e5e7eb;
          --tw-prose-invert-body: #d1d5db;
          --tw-prose-invert-headings: #fff;
          --tw-prose-invert-lead: #9ca3af;
          --tw-prose-invert-links: #fff;
          --tw-prose-invert-bold: #fff;
          --tw-prose-invert-counters: #9ca3af;
          --tw-prose-invert-bullets: #4b5563;
          --tw-prose-invert-hr: #374151;
          --tw-prose-invert-quotes: #f3f4f6;
          --tw-prose-invert-quote-borders: #374151;
          --tw-prose-invert-captions: #9ca3af;
          --tw-prose-invert-code: #fff;
          --tw-prose-invert-pre-code: #d1d5db;
          --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
          --tw-prose-invert-th-borders: #4b5563;
          --tw-prose-invert-td-borders: #374151;
          font-size: 1rem;
          line-height: 1.75;
}
.prose :where(p):not(:where([class~="not-prose"] *)) {
          margin-top: 1.25em;
          margin-bottom: 1.25em;
}
.prose :where(img):not(:where([class~="not-prose"] *)) {
          margin-top: 2em;
          margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"] *)) {
          margin-top: 2em;
          margin-bottom: 2em;
}
.prose :where(figure):not(:where([class~="not-prose"] *)) {
          margin-top: 2em;
          margin-bottom: 2em;
}
.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
          font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
          font-size: 0.9em;
}
.prose :where(li):not(:where([class~="not-prose"] *)) {
          margin-top: 0.5em;
          margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
          padding-left: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
          padding-left: 0.375em;
}
.prose > :where(ul > li p):not(:where([class~="not-prose"] *)) {
          margin-top: 0.75em;
          margin-bottom: 0.75em;
}
.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
          margin-top: 1.25em;
}
.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
          margin-bottom: 1.25em;
}
.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
          margin-top: 1.25em;
}
.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
          margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
          margin-top: 0.75em;
          margin-bottom: 0.75em;
}
.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
          margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
          margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
          margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
          margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
          padding-left: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
          padding-right: 0;
}
.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
          padding-left: 0;
}
.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
          padding-right: 0;
}
.prose > :where(:first-child):not(:where([class~="not-prose"] *)) {
          margin-top: 0;
}
.prose > :where(:last-child):not(:where([class~="not-prose"] *)) {
          margin-bottom: 0;
}
.mx-auto {
          margin-left: auto;
          margin-right: auto;
}
.my-0 {
          margin-top: 0px;
          margin-bottom: 0px;
}
.mb-4 {
          margin-bottom: 1rem;
}
.mb-2 {
          margin-bottom: 0.5rem;
}
.flex {
          display: flex;
}
.h-6 {
          height: 1.5rem;
}
.w-full {
          width: 100%;
}
.w-6 {
          width: 1.5rem;
}
.max-w-screen-xl {
          max-width: 1280px;
}
.max-w-none {
          max-width: none;
}
.shrink-0 {
          flex-shrink: 0;
}
.items-center {
          align-items: center;
}
.justify-between {
          justify-content: space-between;
}
.border {
          border-width: 1px;
}
.border-b-0 {
          border-bottom-width: 0px;
}
.border-b {
          border-bottom-width: 1px;
}
.border-l {
          border-left-width: 1px;
}
.border-r {
          border-right-width: 1px;
}
.border-gray-200 {
          --tw-border-opacity: 1;
          border-color: rgb(229 231 235 / var(--tw-border-opacity));
}
.bg-gray-100 {
          --tw-bg-opacity: 1;
          background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}
.p-5 {
          padding: 1.25rem;
}
.p-4 {
          padding: 1rem;
}
.px-4 {
          padding-left: 1rem;
          padding-right: 1rem;
}
.py-16 {
          padding-top: 4rem;
          padding-bottom: 4rem;
}
.text-left {
          text-align: left;
}
.text-3xl {
          font-size: 1.875rem;
          line-height: 2.25rem;
}
.text-2xl {
          font-size: 1.5rem;
          line-height: 2rem;
}
.text-xl {
          font-size: 1.25rem;
          line-height: 1.75rem;
}
.font-medium {
          font-weight: 500;
}

body, html {
    min-height: 100vh;
}

.hover\:bg-gray-100:hover {
          --tw-bg-opacity: 1;
          background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.focus\:ring-2:focus {
          --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
          --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
          box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-gray-200:focus {
          --tw-ring-opacity: 1;
          --tw-ring-color: rgb(229 231 235 / var(--tw-ring-opacity));
}

@media (min-width: 1024px) {.lg\:px-8 {
                    padding-left: 2rem;
                    padding-right: 2rem;
          }
}
